{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatRoom=()=>{const[messages,setMessages]=useState([]);const[user,setUser]=useState('');const[message,setMessage]=useState('');const fetchMessages=async()=>{try{const response=await fetch('http://localhost:5000/messages');const data=await response.json();setMessages(data);}catch(error){console.error('Error fetching messages:',error);}};const sendMessage=async()=>{try{await fetch('http://localhost:5000/messages',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({user,message})});// Clear the message input after sending\nsetMessage('');setUser('');// Fetch messages to update the list\nfetchMessages();}catch(error){console.error('Error sending message:',error);}};useEffect(()=>{// Fetch messages on component mount\nfetchMessages();// Poll for new messages every 2 seconds\nconst interval=setInterval(()=>{fetchMessages();},2000);return()=>clearInterval(interval);},[]);// Run only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chat Room\"}),/*#__PURE__*/_jsx(\"ul\",{children:messages.map(message=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[message.user,\":\"]}),\" \",message.message]},message._id))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Your name\",value:user,onChange:e=>setUser(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message...\",value:message,onChange:e=>setMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,children:\"Send\"})]})]});};export default ChatRoom;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ChatRoom","messages","setMessages","user","setUser","message","setMessage","fetchMessages","response","fetch","data","json","error","console","sendMessage","method","headers","body","JSON","stringify","interval","setInterval","clearInterval","children","map","_id","type","placeholder","value","onChange","e","target","onClick"],"sources":["D:/tyagi/My Projects/Me_Chat/client/src/ChatRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatRoom = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [user, setUser] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/messages');\r\n            const data = await response.json();\r\n            setMessages(data);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        try {\r\n            await fetch('http://localhost:5000/messages', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ user, message }),\r\n            });\r\n\r\n            // Clear the message input after sending\r\n            setMessage('');\r\n            setUser('');\r\n            // Fetch messages to update the list\r\n            fetchMessages();\r\n        } catch (error) {\r\n            console.error('Error sending message:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch messages on component mount\r\n        fetchMessages();\r\n        // Poll for new messages every 2 seconds\r\n        const interval = setInterval(() => {\r\n            fetchMessages();\r\n        }, 2000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []); // Run only once on mount\r\n\r\n    return (\r\n        <div>\r\n            <h2>Chat Room</h2>\r\n            <ul>\r\n                {messages.map((message) => (\r\n                    <li key={message._id}>\r\n                        <strong>{message.user}:</strong> {message.message}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Your name\"\r\n                    value={user}\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}